from tensorflow import keras
from tensorflow.keras import layers
from tensorflow.python.keras.layers.advanced_activations import LeakyReLU

#filters = [32,64,128,128,128,128,256,256,256,128,128,128,128,64,32]
#filters = [64,128,128,256,256,256,256,256,256,256,256,256,128,128,64]
#filters = [64,128,128,128,128,256 ,512,512,512, 256,128,128,128,128,64]
#filters = [128,256,512,512,512,512,512,512,512,512,512,512,512,256,128]
filters = [64,64,128,256,256,256,512,512,512,256,256,256,128,64,64]

def SVBRDF_semi_branched():
    print("SEMI BRANCHED")
    inputs = keras.Input(shape=(256,256) + (3,))

### just write the complete network, long code, but works. 
### keras subclassing is trash.
### trainable but cannot be loaded.
#a: albedo, s:specular, n: normal, r: roughness

#================
#=== Encoder ====
#================

    gf       = layers.AveragePooling2D(inputs.shape[1],inputs.shape[1])(inputs)
    gf       = layers.Dense(filters[0])(gf)
    gf       = layers.Activation('selu')(gf)
    encoder1 = layers.Conv2D(filters = filters[0], kernel_size = 4, padding="same")(inputs)
    encoder1 = layers.BatchNormalization()(encoder1)
    encoder1 = layers.Activation("selu")(encoder1) 

    encoder2 = layers.MaxPooling2D(pool_size=(2, 2), padding="same")(encoder1)
    gfdown   = layers.AveragePooling2D(encoder2.shape[1],encoder2.shape[1])(encoder2)
    gfup     = layers.Dense(filters[0])(gf)
    gf       = layers.Concatenate()([gf,gfdown])
    gf       = layers.Dense(filters[1])(gf)
    gf       = layers.Activation('selu')(gf)
    encoder2 = layers.Add()([encoder2,gfup])
    encoder2 = LeakyReLU()(encoder2)
    encoder2 = layers.Conv2D(filters = filters[1], kernel_size = 4, padding="same")(encoder2)
    encoder2 = layers.BatchNormalization()(encoder2)
    encoder2 = layers.Activation("selu")(encoder2) 

    encoder3 = layers.MaxPooling2D(pool_size=(2, 2), padding="same")(encoder2)
    gfdown   = layers.AveragePooling2D(encoder3.shape[1],encoder3.shape[1])(encoder3)
    gfup     = layers.Dense(filters[1])(gf)
    gf       = layers.Concatenate()([gf,gfdown])
    gf       = layers.Dense(filters[2])(gf)
    gf       = layers.Activation('selu')(gf)
    encoder3 = layers.Add()([encoder3,gfup])
    encoder3 = LeakyReLU()(encoder3)
    encoder3 = layers.Conv2D(filters = filters[2], kernel_size = 4, padding="same")(encoder3)
    encoder3 = layers.BatchNormalization()(encoder3)
    encoder3 = layers.Activation("selu")(encoder3) 

    encoder4 = layers.MaxPooling2D(pool_size=(2, 2), padding="same")(encoder3)
    gfdown   = layers.AveragePooling2D(encoder4.shape[1],encoder4.shape[1])(encoder4)
    gfup     = layers.Dense(filters[2])(gf)
    gf       = layers.Concatenate()([gf,gfdown])
    gf       = layers.Dense(filters[3])(gf)
    gf       = layers.Activation('selu')(gf)
    encoder4 = layers.Add()([encoder4,gfup])
    encoder4 = LeakyReLU()(encoder4)
    encoder4 = layers.Conv2D(filters = filters[3], kernel_size = 4, padding="same")(encoder4)
    encoder4 = layers.BatchNormalization()(encoder4)
    encoder4 = layers.Activation("selu")(encoder4)

    encoder5 = layers.MaxPooling2D(pool_size=(2, 2), padding="same")(encoder4)
    gfdown   = layers.AveragePooling2D(encoder5.shape[1],encoder4.shape[1])(encoder5)
    gfup     = layers.Dense(filters[3])(gf)
    gf       = layers.Concatenate()([gf,gfdown])
    gf       = layers.Dense(filters[4])(gf)
    gf       = layers.Activation('selu')(gf)
    encoder5 = layers.Add()([encoder5,gfup])
    encoder5 = LeakyReLU()(encoder5)
    encoder5 = layers.Conv2D(filters = filters[4], kernel_size = 4, padding="same")(encoder5)
    encoder5 = layers.BatchNormalization()(encoder5)
    encoder5 = layers.Activation("selu")(encoder5)

    encoder6 = layers.MaxPooling2D(pool_size=(2, 2), padding="same")(encoder5)
    gfdown   = layers.AveragePooling2D(encoder6.shape[1],encoder6.shape[1])(encoder6)
    gfup     = layers.Dense(filters[4])(gf)
    gf       = layers.Concatenate()([gf,gfdown])
    gf       = layers.Dense(filters[5])(gf)
    gf       = layers.Activation('selu')(gf)
    encoder6 = layers.Add()([encoder6,gfup])
    encoder6 = LeakyReLU()(encoder6)    
    encoder6 = layers.Conv2D(filters = filters[5], kernel_size = 4, padding="same")(encoder6)
    encoder6 = layers.BatchNormalization()(encoder6)
    encoder6 = layers.Activation("selu")(encoder6)

    encoder7 = layers.MaxPooling2D(pool_size=(2, 2), padding="same")(encoder6)
    gfdown   = layers.AveragePooling2D(encoder7.shape[1],encoder7.shape[1])(encoder7)
    gfup     = layers.Dense(filters[5])(gf)
    gf       = layers.Concatenate()([gf,gfdown])
    gf       = layers.Dense(filters[6])(gf)
    gf       = layers.Activation('selu')(gf)
    encoder7 = layers.Add()([encoder7,gfup])
    encoder7 = LeakyReLU()(encoder7)    
    encoder7 = layers.Conv2D(filters = filters[6], kernel_size = 4, padding="same")(encoder7)
    encoder7 = layers.BatchNormalization()(encoder7)
    encoder7 = layers.Activation("selu")(encoder7)

    bottom   = layers.MaxPooling2D(pool_size=(2, 2), padding="same")(encoder7)
    gfdown   = layers.AveragePooling2D(bottom.shape[1],bottom.shape[1])(bottom)
    gfup     = layers.Dense(filters[6])(gf)
    gf       = layers.Concatenate()([gf,gfdown])
    gf       = layers.Dense(filters[7])(gf)
    gf       = layers.Activation('selu')(gf)
    bottom   = layers.Add()([bottom,gfup])
    bottom   = LeakyReLU()(bottom)    
    bottom   = layers.Conv2D(filters = filters[7], kernel_size = 4, padding="same")(bottom)
    bottom   = layers.BatchNormalization()(bottom)
    bottom   = layers.Activation("selu")(bottom) 
    bottom   = layers.Conv2DTranspose(filters = filters[8],kernel_size=2,strides = 2, padding= "same")(bottom)

#=======================
#=== albedo decoding ===
#=======================

    a_decoder7 = layers.Concatenate()([encoder7,bottom])
    a_gfdown   = layers.AveragePooling2D(a_decoder7.shape[1],a_decoder7.shape[1])(a_decoder7)
    a_gfup     = layers.Dense(filters[8]*2)(gf)
    a_gf       = layers.Concatenate()([gf,a_gfdown])
    a_gf       = layers.Dense(filters[8])(a_gf)
    a_gf       = layers.Activation('selu')(a_gf)
    a_decoder7 = layers.Add()([a_decoder7,a_gfup])
    a_decoder7 = LeakyReLU()(a_decoder7)    
    a_decoder7 = layers.Conv2D(filters = filters[8], kernel_size = 4, padding="same")(a_decoder7)
    a_decoder7 = layers.BatchNormalization()(a_decoder7)
    a_decoder7 = layers.Activation("selu")(a_decoder7) 
    a_decoder7 = layers.Conv2DTranspose(filters = filters[9],kernel_size=2,strides = 2, padding= "same")(a_decoder7)

    a_decoder6 = layers.Concatenate()([encoder6,a_decoder7])
    a_gfdown   = layers.AveragePooling2D(a_decoder6.shape[1],a_decoder6.shape[1])(a_decoder6)
    a_gfup     = layers.Dense(filters[9]*2)(a_gf)
    a_gf       = layers.Concatenate()([a_gf,a_gfdown])
    a_gf       = layers.Dense(filters[9])(a_gf)
    a_gf       = layers.Activation('selu')(a_gf)
    a_decoder6 = layers.Add()([a_decoder6,a_gfup])
    a_decoder6 = LeakyReLU()(a_decoder6)    
    a_decoder6 = layers.Conv2D(filters = filters[9], kernel_size = 4, padding="same")(a_decoder6)
    a_decoder6 = layers.BatchNormalization()(a_decoder6)
    a_decoder6 = layers.Activation("selu")(a_decoder6) 
    a_decoder6 = layers.Conv2DTranspose(filters = filters[10],kernel_size=2,strides = 2, padding= "same")(a_decoder6)

    a_decoder5 = layers.Concatenate()([encoder5,a_decoder6])
    a_gfdown   = layers.AveragePooling2D(a_decoder5.shape[1],a_decoder5.shape[1])(a_decoder5)
    a_gfup     = layers.Dense(filters[10]*2)(a_gf)
    a_gf       = layers.Concatenate()([a_gf,a_gfdown])
    a_gf       = layers.Dense(filters[10])(a_gf)
    a_gf       = layers.Activation('selu')(a_gf)
    a_decoder5 = layers.Add()([a_decoder5,a_gfup])
    a_decoder5 = LeakyReLU()(a_decoder5) 
    a_decoder5 = layers.Conv2D(filters = filters[10], kernel_size = 4, padding="same")(a_decoder5)
    a_decoder5 = layers.BatchNormalization()(a_decoder5)
    a_decoder5 = layers.Activation("selu")(a_decoder5) 
    a_decoder5 = layers.Conv2DTranspose(filters = filters[11],kernel_size=2,strides = 2, padding= "same")(a_decoder5)
    
    a_decoder4 = layers.Concatenate()([encoder4,a_decoder5])
    a_gfdown   = layers.AveragePooling2D(a_decoder4.shape[1],a_decoder4.shape[1])(a_decoder4)
    a_gfup     = layers.Dense(filters[11]*2)(a_gf)
    a_gf       = layers.Concatenate()([a_gf,a_gfdown])
    a_gf       = layers.Dense(filters[11])(a_gf)
    a_gf       = layers.Activation('selu')(a_gf)
    a_decoder4 = layers.Add()([a_decoder4,a_gfup])
    a_decoder4 = LeakyReLU()(a_decoder4) 
    a_decoder4 = layers.Conv2D(filters = filters[11], kernel_size = 4, padding="same")(a_decoder4)
    a_decoder4 = layers.BatchNormalization()(a_decoder4)
    a_decoder4 = layers.Activation("selu")(a_decoder4) 
    a_decoder4 = layers.Conv2DTranspose(filters = filters[12],kernel_size=2,strides = 2, padding= "same")(a_decoder4)

    a_decoder3 = layers.Concatenate()([encoder3,a_decoder4])
    a_gfdown   = layers.AveragePooling2D(a_decoder3.shape[1],a_decoder3.shape[1])(a_decoder3)
    a_gfup     = layers.Dense(filters[12]*2)(a_gf)
    a_gf       = layers.Concatenate()([a_gf,a_gfdown])
    a_gf       = layers.Dense(filters[12])(a_gf)
    a_gf       = layers.Activation('selu')(a_gf)
    a_decoder3 = layers.Add()([a_decoder3,a_gfup])
    a_decoder3 = LeakyReLU()(a_decoder3) 
    a_decoder3 = layers.Conv2D(filters = filters[12], kernel_size = 4, padding="same")(a_decoder3)
    a_decoder3 = layers.BatchNormalization()(a_decoder3)
    a_decoder3 = layers.Activation("selu")(a_decoder3) 
    a_decoder3 = layers.Conv2DTranspose(filters = filters[13],kernel_size=2,strides = 2, padding= "same")(a_decoder3)

    a_decoder2 = layers.Concatenate()([encoder2,a_decoder3])
    a_gfdown   = layers.AveragePooling2D(a_decoder2.shape[1],a_decoder2.shape[1])(a_decoder2)
    a_gfup     = layers.Dense(filters[13]*2)(a_gf)
    a_gf       = layers.Concatenate()([a_gf,a_gfdown])
    a_gf       = layers.Dense(filters[13])(a_gf)
    a_gf       = layers.Activation('selu')(a_gf)
    a_decoder2 = layers.Add()([a_decoder2,a_gfup])
    a_decoder2 = LeakyReLU()(a_decoder2) 
    a_decoder2 = layers.Conv2D(filters = filters[13], kernel_size = 4, padding="same")(a_decoder2)
    a_decoder2 = layers.BatchNormalization()(a_decoder2)
    a_decoder2 = layers.Activation("selu")(a_decoder2) 
    a_decoder2 = layers.Conv2DTranspose(filters = filters[14],kernel_size=2,strides = 2, padding= "same")(a_decoder2)  

    a_decoder1 = layers.Concatenate()([encoder1,a_decoder2])
    a_gfup     = layers.Dense(filters[14]*2)(a_gf)
    a_decoder1 = layers.Add()([a_decoder1,a_gfup])
    a_decoder1 = LeakyReLU()(a_decoder1) 
    a_decoder1 = layers.Conv2D(filters = filters[14], kernel_size = 4, padding="same")(a_decoder1)
    a_decoder1 = layers.BatchNormalization()(a_decoder1)
    a_decoder1 = layers.Activation("selu")(a_decoder1) 

    a_outputs = layers.Conv2D(3, kernel_size = 1, activation="tanh", padding="same")(a_decoder1)

#=========================
#=== specular decoding ===
#=========================

    s_decoder7 = layers.Concatenate()([encoder7,bottom])
    s_gfdown   = layers.AveragePooling2D(s_decoder7.shape[1],s_decoder7.shape[1])(s_decoder7)
    s_gfup     = layers.Dense(filters[8]*2)(gf)
    s_gf       = layers.Concatenate()([gf,s_gfdown])
    s_gf       = layers.Dense(filters[8])(s_gf)
    s_gf       = layers.Activation('selu')(s_gf)
    s_decoder7 = layers.Add()([s_decoder7,s_gfup])
    s_decoder7 = LeakyReLU()(s_decoder7)    
    s_decoder7 = layers.Conv2D(filters = filters[8], kernel_size = 4, padding="same")(s_decoder7)
    s_decoder7 = layers.BatchNormalization()(s_decoder7)
    s_decoder7 = layers.Activation("selu")(s_decoder7) 
    s_decoder7 = layers.Conv2DTranspose(filters = filters[9],kernel_size=2,strides = 2, padding= "same")(s_decoder7)

    s_decoder6 = layers.Concatenate()([encoder6,s_decoder7])
    s_gfdown   = layers.AveragePooling2D(s_decoder6.shape[1],s_decoder6.shape[1])(s_decoder6)
    s_gfup     = layers.Dense(filters[9]*2)(s_gf)
    s_gf       = layers.Concatenate()([s_gf,s_gfdown])
    s_gf       = layers.Dense(filters[9])(s_gf)
    s_gf       = layers.Activation('selu')(s_gf)
    s_decoder6 = layers.Add()([s_decoder6,s_gfup])
    s_decoder6 = LeakyReLU()(s_decoder6)    
    s_decoder6 = layers.Conv2D(filters = filters[9], kernel_size = 4, padding="same")(s_decoder6)
    s_decoder6 = layers.BatchNormalization()(s_decoder6)
    s_decoder6 = layers.Activation("selu")(s_decoder6) 
    s_decoder6 = layers.Conv2DTranspose(filters = filters[10],kernel_size=2,strides = 2, padding= "same")(s_decoder6)

    s_decoder5 = layers.Concatenate()([encoder5,s_decoder6])
    s_gfdown   = layers.AveragePooling2D(s_decoder5.shape[1],s_decoder5.shape[1])(s_decoder5)
    s_gfup     = layers.Dense(filters[10]*2)(s_gf)
    s_gf       = layers.Concatenate()([s_gf,s_gfdown])
    s_gf       = layers.Dense(filters[10])(s_gf)
    s_gf       = layers.Activation('selu')(s_gf)
    s_decoder5 = layers.Add()([s_decoder5,s_gfup])
    s_decoder5 = LeakyReLU()(s_decoder5) 
    s_decoder5 = layers.Conv2D(filters = filters[10], kernel_size = 4, padding="same")(s_decoder5)
    s_decoder5 = layers.BatchNormalization()(s_decoder5)
    s_decoder5 = layers.Activation("selu")(s_decoder5) 
    s_decoder5 = layers.Conv2DTranspose(filters = filters[11],kernel_size=2,strides = 2, padding= "same")(s_decoder5)
    
    s_decoder4 = layers.Concatenate()([encoder4,s_decoder5])
    s_gfdown   = layers.AveragePooling2D(s_decoder4.shape[1],s_decoder4.shape[1])(s_decoder4)
    s_gfup     = layers.Dense(filters[11]*2)(s_gf)
    s_gf       = layers.Concatenate()([s_gf,s_gfdown])
    s_gf       = layers.Dense(filters[11])(s_gf)
    s_gf       = layers.Activation('selu')(s_gf)
    s_decoder4 = layers.Add()([s_decoder4,s_gfup])
    s_decoder4 = LeakyReLU()(s_decoder4) 
    s_decoder4 = layers.Conv2D(filters = filters[11], kernel_size = 4, padding="same")(s_decoder4)
    s_decoder4 = layers.BatchNormalization()(s_decoder4)
    s_decoder4 = layers.Activation("selu")(s_decoder4) 
    s_decoder4 = layers.Conv2DTranspose(filters = filters[12],kernel_size=2,strides = 2, padding= "same")(s_decoder4)

    s_decoder3 = layers.Concatenate()([encoder3,s_decoder4])
    s_gfdown   = layers.AveragePooling2D(s_decoder3.shape[1],s_decoder3.shape[1])(s_decoder3)
    s_gfup     = layers.Dense(filters[12]*2)(s_gf)
    s_gf       = layers.Concatenate()([s_gf,s_gfdown])
    s_gf       = layers.Dense(filters[12])(s_gf)
    s_gf       = layers.Activation('selu')(s_gf)
    s_decoder3 = layers.Add()([s_decoder3,s_gfup])
    s_decoder3 = LeakyReLU()(s_decoder3) 
    s_decoder3 = layers.Conv2D(filters = filters[12], kernel_size = 4, padding="same")(s_decoder3)
    s_decoder3 = layers.BatchNormalization()(s_decoder3)
    s_decoder3 = layers.Activation("selu")(s_decoder3) 
    s_decoder3 = layers.Conv2DTranspose(filters = filters[13],kernel_size=2,strides = 2, padding= "same")(s_decoder3)

    s_decoder2 = layers.Concatenate()([encoder2,s_decoder3])
    s_gfdown   = layers.AveragePooling2D(s_decoder2.shape[1],s_decoder2.shape[1])(s_decoder2)
    s_gfup     = layers.Dense(filters[13]*2)(s_gf)
    s_gf       = layers.Concatenate()([s_gf,s_gfdown])
    s_gf       = layers.Dense(filters[13])(s_gf)
    s_gf       = layers.Activation('selu')(s_gf)
    s_decoder2 = layers.Add()([s_decoder2,s_gfup])
    s_decoder2 = LeakyReLU()(s_decoder2) 
    s_decoder2 = layers.Conv2D(filters = filters[13], kernel_size = 4, padding="same")(s_decoder2)
    s_decoder2 = layers.BatchNormalization()(s_decoder2)
    s_decoder2 = layers.Activation("selu")(s_decoder2) 
    s_decoder2 = layers.Conv2DTranspose(filters = filters[14],kernel_size=2,strides = 2, padding= "same")(s_decoder2)  

    s_decoder1 = layers.Concatenate()([encoder1,s_decoder2])
    s_gfup     = layers.Dense(filters[14]*2)(s_gf)
    s_decoder1 = layers.Add()([s_decoder1,s_gfup])
    s_decoder1 = LeakyReLU()(s_decoder1) 
    s_decoder1 = layers.Conv2D(filters = filters[14], kernel_size = 4, padding="same")(s_decoder1)
    s_decoder1 = layers.BatchNormalization()(s_decoder1)
    s_decoder1 = layers.Activation("selu")(s_decoder1) 

    s_outputs = layers.Conv2D(3, kernel_size = 1, activation="tanh", padding="same")(s_decoder1)

#=========================
#==== normal decoding ====
#=========================

    n_decoder7 = layers.Concatenate()([encoder7,bottom])
    n_gfdown   = layers.AveragePooling2D(n_decoder7.shape[1],n_decoder7.shape[1])(n_decoder7)
    n_gfup     = layers.Dense(filters[8]*2)(gf)
    n_gf       = layers.Concatenate()([gf,n_gfdown])
    n_gf       = layers.Dense(filters[8])(n_gf)
    n_gf       = layers.Activation('selu')(n_gf)
    n_decoder7 = layers.Add()([n_decoder7,n_gfup])
    n_decoder7 = LeakyReLU()(n_decoder7)    
    n_decoder7 = layers.Conv2D(filters = filters[8], kernel_size = 4, padding="same")(n_decoder7)
    n_decoder7 = layers.BatchNormalization()(n_decoder7)
    n_decoder7 = layers.Activation("selu")(n_decoder7) 
    n_decoder7 = layers.Conv2DTranspose(filters = filters[9],kernel_size=2,strides = 2, padding= "same")(n_decoder7)

    n_decoder6 = layers.Concatenate()([encoder6,n_decoder7])
    n_gfdown   = layers.AveragePooling2D(n_decoder6.shape[1],n_decoder6.shape[1])(n_decoder6)
    n_gfup     = layers.Dense(filters[9]*2)(n_gf)
    n_gf       = layers.Concatenate()([n_gf,n_gfdown])
    n_gf       = layers.Dense(filters[9])(n_gf)
    n_gf       = layers.Activation('selu')(n_gf)
    n_decoder6 = layers.Add()([n_decoder6,n_gfup])
    n_decoder6 = LeakyReLU()(n_decoder6)    
    n_decoder6 = layers.Conv2D(filters = filters[9], kernel_size = 4, padding="same")(n_decoder6)
    n_decoder6 = layers.BatchNormalization()(n_decoder6)
    n_decoder6 = layers.Activation("selu")(n_decoder6) 
    n_decoder6 = layers.Conv2DTranspose(filters = filters[10],kernel_size=2,strides = 2, padding= "same")(n_decoder6)

    n_decoder5 = layers.Concatenate()([encoder5,n_decoder6])
    n_gfdown   = layers.AveragePooling2D(n_decoder5.shape[1],n_decoder5.shape[1])(n_decoder5)
    n_gfup     = layers.Dense(filters[10]*2)(n_gf)
    n_gf       = layers.Concatenate()([n_gf,n_gfdown])
    n_gf       = layers.Dense(filters[10])(n_gf)
    n_gf       = layers.Activation('selu')(n_gf)
    n_decoder5 = layers.Add()([n_decoder5,n_gfup])
    n_decoder5 = LeakyReLU()(n_decoder5) 
    n_decoder5 = layers.Conv2D(filters = filters[10], kernel_size = 4, padding="same")(n_decoder5)
    n_decoder5 = layers.BatchNormalization()(n_decoder5)
    n_decoder5 = layers.Activation("selu")(n_decoder5) 
    n_decoder5 = layers.Conv2DTranspose(filters = filters[11],kernel_size=2,strides = 2, padding= "same")(n_decoder5)
    
    n_decoder4 = layers.Concatenate()([encoder4,n_decoder5])
    n_gfdown   = layers.AveragePooling2D(n_decoder4.shape[1],n_decoder4.shape[1])(n_decoder4)
    n_gfup     = layers.Dense(filters[11]*2)(n_gf)
    n_gf       = layers.Concatenate()([n_gf,n_gfdown])
    n_gf       = layers.Dense(filters[11])(n_gf)
    n_gf       = layers.Activation('selu')(n_gf)
    n_decoder4 = layers.Add()([n_decoder4,n_gfup])
    n_decoder4 = LeakyReLU()(n_decoder4) 
    n_decoder4 = layers.Conv2D(filters = filters[11], kernel_size = 4, padding="same")(n_decoder4)
    n_decoder4 = layers.BatchNormalization()(n_decoder4)
    n_decoder4 = layers.Activation("selu")(n_decoder4) 
    n_decoder4 = layers.Conv2DTranspose(filters = filters[12],kernel_size=2,strides = 2, padding= "same")(n_decoder4)

    n_decoder3 = layers.Concatenate()([encoder3,n_decoder4])
    n_gfdown   = layers.AveragePooling2D(n_decoder3.shape[1],n_decoder3.shape[1])(n_decoder3)
    n_gfup     = layers.Dense(filters[12]*2)(n_gf)
    n_gf       = layers.Concatenate()([n_gf,n_gfdown])
    n_gf       = layers.Dense(filters[12])(n_gf)
    n_gf       = layers.Activation('selu')(n_gf)
    n_decoder3 = layers.Add()([n_decoder3,n_gfup])
    n_decoder3 = LeakyReLU()(n_decoder3) 
    n_decoder3 = layers.Conv2D(filters = filters[12], kernel_size = 4, padding="same")(n_decoder3)
    n_decoder3 = layers.BatchNormalization()(n_decoder3)
    n_decoder3 = layers.Activation("selu")(n_decoder3) 
    n_decoder3 = layers.Conv2DTranspose(filters = filters[13],kernel_size=2,strides = 2, padding= "same")(n_decoder3)

    n_decoder2 = layers.Concatenate()([encoder2,n_decoder3])
    n_gfdown   = layers.AveragePooling2D(n_decoder2.shape[1],n_decoder2.shape[1])(n_decoder2)
    n_gfup     = layers.Dense(filters[13]*2)(n_gf)
    n_gf       = layers.Concatenate()([n_gf,n_gfdown])
    n_gf       = layers.Dense(filters[13])(n_gf)
    n_gf       = layers.Activation('selu')(n_gf)
    n_decoder2 = layers.Add()([n_decoder2,n_gfup])
    n_decoder2 = LeakyReLU()(n_decoder2) 
    n_decoder2 = layers.Conv2D(filters = filters[13], kernel_size = 4, padding="same")(n_decoder2)
    n_decoder2 = layers.BatchNormalization()(n_decoder2)
    n_decoder2 = layers.Activation("selu")(n_decoder2) 
    n_decoder2 = layers.Conv2DTranspose(filters = filters[14],kernel_size=2,strides = 2, padding= "same")(n_decoder2)  

    n_decoder1 = layers.Concatenate()([encoder1,n_decoder2])
    n_gfup     = layers.Dense(filters[14]*2)(n_gf)
    n_decoder1 = layers.Add()([n_decoder1,n_gfup])
    n_decoder1 = LeakyReLU()(n_decoder1) 
    n_decoder1 = layers.Conv2D(filters = filters[14], kernel_size = 4, padding="same")(n_decoder1)
    n_decoder1 = layers.BatchNormalization()(n_decoder1)
    n_decoder1 = layers.Activation("selu")(n_decoder1) 

    n_outputs = layers.Conv2D(2, kernel_size = 1, activation="tanh", padding="same")(n_decoder1)

#================
#=== roughness ==
#================

    r_decoder7 = layers.Concatenate()([encoder7,bottom])
    r_gfdown   = layers.AveragePooling2D(r_decoder7.shape[1],r_decoder7.shape[1])(r_decoder7)
    r_gfup     = layers.Dense(filters[8]*2)(gf)
    r_gf       = layers.Concatenate()([gf,r_gfdown])
    r_gf       = layers.Dense(filters[8])(r_gf)
    r_gf       = layers.Activation('selu')(r_gf)
    r_decoder7 = layers.Add()([r_decoder7,r_gfup])
    r_decoder7 = LeakyReLU()(r_decoder7)    
    r_decoder7 = layers.Conv2D(filters = filters[8], kernel_size = 4, padding="same")(r_decoder7)
    r_decoder7 = layers.BatchNormalization()(r_decoder7)
    r_decoder7 = layers.Activation("selu")(r_decoder7) 
    r_decoder7 = layers.Conv2DTranspose(filters = filters[9],kernel_size=2,strides = 2, padding= "same")(r_decoder7)

    r_decoder6 = layers.Concatenate()([encoder6,r_decoder7])
    r_gfdown   = layers.AveragePooling2D(r_decoder6.shape[1],r_decoder6.shape[1])(r_decoder6)
    r_gfup     = layers.Dense(filters[9]*2)(r_gf)
    r_gf       = layers.Concatenate()([r_gf,r_gfdown])
    r_gf       = layers.Dense(filters[9])(r_gf)
    r_gf       = layers.Activation('selu')(r_gf)
    r_decoder6 = layers.Add()([r_decoder6,r_gfup])
    r_decoder6 = LeakyReLU()(r_decoder6)    
    r_decoder6 = layers.Conv2D(filters = filters[9], kernel_size = 4, padding="same")(r_decoder6)
    r_decoder6 = layers.BatchNormalization()(r_decoder6)
    r_decoder6 = layers.Activation("selu")(r_decoder6) 
    r_decoder6 = layers.Conv2DTranspose(filters = filters[10],kernel_size=2,strides = 2, padding= "same")(r_decoder6)

    r_decoder5 = layers.Concatenate()([encoder5,r_decoder6])
    r_gfdown   = layers.AveragePooling2D(r_decoder5.shape[1],r_decoder5.shape[1])(r_decoder5)
    r_gfup     = layers.Dense(filters[10]*2)(r_gf)
    r_gf       = layers.Concatenate()([r_gf,r_gfdown])
    r_gf       = layers.Dense(filters[10])(r_gf)
    r_gf       = layers.Activation('selu')(r_gf)
    r_decoder5 = layers.Add()([r_decoder5,r_gfup])
    r_decoder5 = LeakyReLU()(r_decoder5) 
    r_decoder5 = layers.Conv2D(filters = filters[10], kernel_size = 4, padding="same")(r_decoder5)
    r_decoder5 = layers.BatchNormalization()(r_decoder5)
    r_decoder5 = layers.Activation("selu")(r_decoder5) 
    r_decoder5 = layers.Conv2DTranspose(filters = filters[11],kernel_size=2,strides = 2, padding= "same")(r_decoder5)
    
    r_decoder4 = layers.Concatenate()([encoder4,r_decoder5])
    r_gfdown   = layers.AveragePooling2D(r_decoder4.shape[1],r_decoder4.shape[1])(r_decoder4)
    r_gfup     = layers.Dense(filters[11]*2)(r_gf)
    r_gf       = layers.Concatenate()([r_gf,r_gfdown])
    r_gf       = layers.Dense(filters[11])(r_gf)
    r_gf       = layers.Activation('selu')(r_gf)
    r_decoder4 = layers.Add()([r_decoder4,r_gfup])
    r_decoder4 = LeakyReLU()(r_decoder4) 
    r_decoder4 = layers.Conv2D(filters = filters[11], kernel_size = 4, padding="same")(r_decoder4)
    r_decoder4 = layers.BatchNormalization()(r_decoder4)
    r_decoder4 = layers.Activation("selu")(r_decoder4) 
    r_decoder4 = layers.Conv2DTranspose(filters = filters[12],kernel_size=2,strides = 2, padding= "same")(r_decoder4)

    r_decoder3 = layers.Concatenate()([encoder3,r_decoder4])
    r_gfdown   = layers.AveragePooling2D(r_decoder3.shape[1],r_decoder3.shape[1])(r_decoder3)
    r_gfup     = layers.Dense(filters[12]*2)(r_gf)
    r_gf       = layers.Concatenate()([r_gf,r_gfdown])
    r_gf       = layers.Dense(filters[12])(r_gf)
    r_gf       = layers.Activation('selu')(r_gf)
    r_decoder3 = layers.Add()([r_decoder3,r_gfup])
    r_decoder3 = LeakyReLU()(r_decoder3) 
    r_decoder3 = layers.Conv2D(filters = filters[12], kernel_size = 4, padding="same")(r_decoder3)
    r_decoder3 = layers.BatchNormalization()(r_decoder3)
    r_decoder3 = layers.Activation("selu")(r_decoder3) 
    r_decoder3 = layers.Conv2DTranspose(filters = filters[13],kernel_size=2,strides = 2, padding= "same")(r_decoder3)

    r_decoder2 = layers.Concatenate()([encoder2,r_decoder3])
    r_gfdown   = layers.AveragePooling2D(r_decoder2.shape[1],r_decoder2.shape[1])(r_decoder2)
    r_gfup     = layers.Dense(filters[13]*2)(r_gf)
    r_gf       = layers.Concatenate()([r_gf,r_gfdown])
    r_gf       = layers.Dense(filters[13])(r_gf)
    r_gf       = layers.Activation('selu')(r_gf)
    r_decoder2 = layers.Add()([r_decoder2,r_gfup])
    r_decoder2 = LeakyReLU()(r_decoder2) 
    r_decoder2 = layers.Conv2D(filters = filters[13], kernel_size = 4, padding="same")(r_decoder2)
    r_decoder2 = layers.BatchNormalization()(r_decoder2)
    r_decoder2 = layers.Activation("selu")(r_decoder2) 
    r_decoder2 = layers.Conv2DTranspose(filters = filters[14],kernel_size=2,strides = 2, padding= "same")(r_decoder2)  

    r_decoder1 = layers.Concatenate()([encoder1,r_decoder2])
    r_gfup     = layers.Dense(filters[14]*2)(r_gf)
    r_decoder1 = layers.Add()([r_decoder1,r_gfup])
    r_decoder1 = LeakyReLU()(r_decoder1) 
    r_decoder1 = layers.Conv2D(filters = filters[14], kernel_size = 4, padding="same")(r_decoder1)
    r_decoder1 = layers.BatchNormalization()(r_decoder1)
    r_decoder1 = layers.Activation("selu")(r_decoder1) 

    r_outputs = layers.Conv2D(1, kernel_size = 1, activation="tanh", padding="same")(r_decoder1)

#================
#==== output ====
#================

    outputs = layers.Concatenate()([a_outputs,s_outputs,n_outputs,r_outputs])
    model = keras.Model(inputs, outputs)
    return model

#model = SVBRDF_semi_branched()
#model.summary()